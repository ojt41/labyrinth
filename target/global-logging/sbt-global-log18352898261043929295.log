[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ojasw\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ojasw\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Eclipse Adoptium Java 17.0.8)
[debug]       Load.loadUnit: plugins took 88.1646ms
[debug]       Load.loadUnit: defsScala took 0.175ms
[debug] [Loading] Scanning directory C:\Users\ojasw\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ojasw\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.3816 ms
[debug]           Load.resolveProject(global-plugins) took 35.2723ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ojasw\.sbt\1.0\plugins, plugins: List(<none>))) took 64.1017ms
[debug] [Loading] Done in C:\Users\ojasw\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 82.5473ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1475ms
[debug]     Load.loadUnit(file:/C:/Users/ojasw/.sbt/1.0/plugins/, ...) took 178.1102ms
[debug]   Load.apply: load took 360.5483ms
[debug]   Load.apply: resolveProjects took 4.1584ms
[debug]   Load.apply: finalTransforms took 46.9055ms
[debug]   Load.apply: config.delegates took 9.9498ms
[debug]   Load.apply: Def.make(settings)... took 434.7876ms
[debug]   Load.apply: structureIndex took 94.617ms
[debug]   Load.apply: mkStreams took 3.8868ms
[info] loading global plugins from C:\Users\ojasw\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2364.3765ms
[debug]           Load.loadUnit: plugins took 17.057ms
[debug]           Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\ojasw\IdeaProjects\lost_in_maze\project
[debug]             Load.loadUnit: mkEval took 4.0547ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ojasw\IdeaProjects\lost_in_maze\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1592 ms
[info] loading settings for project lost_in_maze-build from idea.sbt ...
[debug]               Load.resolveProject(lost_in_maze-build) took 2.0489ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lost_in_maze-build, base: C:\Users\ojasw\IdeaProjects\lost_in_maze\project, plugins: List(<none>))) took 3.5325ms
[debug] [Loading] Done in C:\Users\ojasw\IdeaProjects\lost_in_maze\project, returning: (lost_in_maze-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 101.2384ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.7079ms
[debug]         Load.loadUnit(file:/C:/Users/ojasw/IdeaProjects/lost_in_maze/project/, ...) took 122.6613ms
[debug]       Load.apply: load took 123.7766ms
[debug]       Load.apply: resolveProjects took 0.1107ms
[debug]       Load.apply: finalTransforms took 7.7369ms
[debug]       Load.apply: config.delegates took 0.3625ms
[debug]       Load.apply: Def.make(settings)... took 47.1677ms
[debug]       Load.apply: structureIndex took 20.234ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\ojasw\IdeaProjects\lost_in_maze\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 575.8678ms
[debug]     Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory C:\Users\ojasw\IdeaProjects\lost_in_maze
[debug]       Load.loadUnit: mkEval took 0.2508ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0098 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 20.2895ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\ojasw\IdeaProjects\lost_in_maze, plugins: List(<none>))) took 23.3592ms
[debug] [Loading] Done in C:\Users\ojasw\IdeaProjects\lost_in_maze, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 91.5145ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.8265ms
[debug]   Load.loadUnit(file:/C:/Users/ojasw/IdeaProjects/lost_in_maze/, ...) took 676.9789ms
[debug] Load.apply: load took 678.5564ms
[debug] Load.apply: resolveProjects took 0.1046ms
[debug] Load.apply: finalTransforms took 16.5683ms
[debug] Load.apply: config.delegates took 0.2195ms
[debug] Load.apply: Def.make(settings)... took 46.6205ms
[debug] Load.apply: structureIndex took 18.136ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to lost_in_maze (in build file:/C:/Users/ojasw/IdeaProjects/lost_in_maze/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61745 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61745, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to lost_in_maze (in build file:/C:/Users/ojasw/IdeaProjects/lost_in_maze/)
[debug] > Exec(idea-shell, None, None)
